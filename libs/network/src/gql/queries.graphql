mutation RegistUserwithUserself(
  $registWithUserselfInput: RegistWithUserselfInput!
) {
  registUserwithUserself(registWithUserselfInput: $registWithUserselfInput) {
    updatedAt
    uid
    name
    image
    createdAt
  }
}
mutation RegistUserwithProvider(
  $registWithProviderInput: RegistWithProviderInput!
) {
  registUserwithProvider(registWithProviderInput: $registWithProviderInput) {
    updatedAt
    uid
    name
    image
    createdAt
  }
}
query Companies(
  $distinct: [CompanyScalarFieldEnum!]
  $orderBy: [CompanyOrderByWithRelationInput!]
  $where: CompanyWhereInput
  $cursor: CompanyWhereUniqueInput
  $skip: Float
  $take: Float
) {
  companies(
    distinct: $distinct
    orderBy: $orderBy
    where: $where
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    createdAt
    description
    displayName
    garages {
      id
    }
    id
    managers {
      uid
    }
    updatedAt
  }
}

mutation UserLogin($userLoginInput: LoginInput!) {
  userLogin(userLoginInput: $userLoginInput) {
    token
    user {
      uid
      name
      image
    }
  }
}

query GetAuthProvider($uid: String!) {
  getAuthProvider(uid: $uid) {
    uid
    type
  }
}

query SearchGarages($dateFilter: DateFilterInput!, $locationFilter: LocationFilterInput!, $slotsFilter: SlotWhereInput, $garageFilter: GarageFilter) {
  searchGarages(dateFilter: $dateFilter, locationFilter: $locationFilter, slotsFilter: $slotsFilter, garageFilter: $garageFilter) {
    id
    address {
      lat
      lng
      address
    }
    verification {
      verified
    }
    availableSlots(dateFilter: $dateFilter, slotsFilter: $slotsFilter) {
      pricePerHour
      type
      count
    }
    images,
    displayName
  }
}

query MyCompany {
  myCompany {
    id
    garages {
      description
      id
      displayName
      address {
        id
        address
        lat
        lng
      }
    }
    createdAt
    displayName
  }
}